name: Build WinBoat
permissions:
  contents: write
on:
  push:
    branches:
      - main
    tags:
      - "v*"
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"
      - name: Install dependencies
        run: pnpm i --frozen-lockfile
      - name: Build guest server and app
        run: pnpm run build:linux-gs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: dist/*
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
        
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build guest server and app
        run: pnpm run build:linux-gs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Zip unpacked variant
        run: |
          cd dist
          zip -r winboat-linux-unpacked.zip linux-unpacked/
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.AppImage
            dist/winboat-linux-unpacked.zip
            dist/latest-linux.yml
            dist/linux-unpacked/resources/guest_server/winboat_guest_server.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}